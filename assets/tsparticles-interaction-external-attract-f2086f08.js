import{E as t,C as a,g as i,c as e,a as c,V as s,m as n,i as o}from"./tsparticles-engine-1e3d91c8.js";class r{constructor(){this.distance=200,this.duration=.4,this.easing="ease-out-quad",this.factor=1,this.maxSpeed=50,this.speed=1}load(t){t&&(void 0!==t.distance&&(this.distance=t.distance),void 0!==t.duration&&(this.duration=t.duration),void 0!==t.easing&&(this.easing=t.easing),void 0!==t.factor&&(this.factor=t.factor),void 0!==t.maxSpeed&&(this.maxSpeed=t.maxSpeed),void 0!==t.speed&&(this.speed=t.speed))}}class d extends t{constructor(t,n){super(n),this._clickAttract=()=>{const t=this.container;t.attract||(t.attract={particles:[]});const{attract:i}=t;if(i.finish||(i.count||(i.count=0),i.count++,i.count===t.particles.count&&(i.finish=!0)),i.clicking){const i=t.interactivity.mouse.clickPosition,e=t.retina.attractModeDistance;if(!e||e<0||!i)return;this._processAttract(i,e,new a(i.x,i.y,e))}else!1===i.clicking&&(i.particles=[])},this._hoverAttract=()=>{const t=this.container,i=t.interactivity.mouse.position,e=t.retina.attractModeDistance;!e||e<0||!i||this._processAttract(i,e,new a(i.x,i.y,e))},this._processAttract=(t,a,n)=>{const o=this.container,r=o.actualOptions.interactivity.modes.attract;if(!r)return;const d=o.particles.quadTree.query(n,(t=>this.isEnabled(t)));for(const l of d){const{dx:n,dy:o,distance:d}=i(l.position,t),p=r.speed*r.factor,h=e(c(r.easing)(1-d/a)*p,0,r.maxSpeed),u=s.create(0===d?p:n/d*h,0===d?p:o/d*h);l.position.subFrom(u)}},this._engine=t,n.attract||(n.attract={particles:[]}),this.handleClickMode=t=>{const a=this.container.actualOptions.interactivity.modes.attract;if(a&&"attract"===t){n.attract||(n.attract={particles:[]}),n.attract.clicking=!0,n.attract.count=0;for(const t of n.attract.particles)this.isEnabled(t)&&t.velocity.setTo(t.initialVelocity);n.attract.particles=[],n.attract.finish=!1,setTimeout((()=>{n.destroyed||(n.attract||(n.attract={particles:[]}),n.attract.clicking=!1)}),1e3*a.duration)}}}clear(){}init(){const t=this.container,a=t.actualOptions.interactivity.modes.attract;a&&(t.retina.attractModeDistance=a.distance*t.retina.pixelRatio)}async interact(){const t=this.container,a=t.actualOptions,i=t.interactivity.status===n,e=a.interactivity.events,c=e.onHover.enable,s=e.onHover.mode,r=e.onClick.enable,d=e.onClick.mode;i&&c&&o("attract",s)?this._hoverAttract():r&&o("attract",d)&&this._clickAttract()}isEnabled(t){const a=this.container,i=a.actualOptions,e=a.interactivity.mouse,c=((null==t?void 0:t.interactivity)??i.interactivity).events;if(!(e.position&&c.onHover.enable||e.clickPosition&&c.onClick.enable))return!1;const s=c.onHover.mode,n=c.onClick.mode;return o("attract",s)||o("attract",n)}loadModeOptions(t,...a){t.attract||(t.attract=new r);for(const i of a)t.attract.load(null==i?void 0:i.attract)}reset(){}}async function l(t,a=!0){await t.addInteractor("externalAttract",(a=>new d(t,a)),a)}export{l};
