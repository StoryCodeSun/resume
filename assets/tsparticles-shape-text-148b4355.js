import{p as t,i as a,k as e,$ as n}from"./tsparticles-engine-1e3d91c8.js";const s=["text","character","char"];class i{draw(a,e,n,s){const i=e.shapeData;if(void 0===i)return;const o=i.value;if(void 0===o)return;void 0===e.text&&(e.text=t(o,e.randomIndexData));const r=e.text,l=i.style??"",c=i.weight??"400",p=2*Math.round(n),d=i.font??"Verdana",h=e.fill,f=r.length*n/2;a.font=`${l} ${c} ${p}px "${d}"`;const x={x:-f,y:n/2};a.globalAlpha=s,h?a.fillText(r,x.x,x.y):a.strokeText(r,x.x,x.y),a.globalAlpha=1}getSidesCount(){return 12}async init(t){const i=t.actualOptions;if(s.find((t=>a(t,i.particles.shape.type)))){const t=s.map((t=>i.particles.shape.options[t])).find((t=>!!t)),a=[];e(t,(t=>{a.push(n(t.font,t.weight))})),await Promise.all(a)}}particleInit(a,e){if(!e.shape||!s.includes(e.shape))return;const n=e.shapeData;if(void 0===n)return;const i=n.value;void 0!==i&&(e.text=t(i,e.randomIndexData))}}async function o(t,a=!0){await t.addShape(s,new i,a)}export{o as l};
