import{c as e,I as s}from"./tsparticles-engine-1e3d91c8.js";class i{init(e){const i=e.container,a=e.options.size.animation;a.enable&&(e.size.velocity=(e.retina.sizeAnimationSpeed??i.retina.sizeAnimationSpeed)/100*i.retina.reduceFactor,a.sync||(e.size.velocity*=s()))}isEnabled(e){return!e.destroyed&&!e.spawning&&e.size.enable&&((e.size.maxLoops??0)<=0||(e.size.maxLoops??0)>0&&(e.size.loops??0)<(e.size.maxLoops??0))}reset(e){e.size.loops=0}update(s,i){this.isEnabled(s)&&function(s,i){const a=s.size;if(s.destroyed||!a||!a.enable||(a.maxLoops??0)>0&&(a.loops??0)>(a.maxLoops??0))return;const o=(a.velocity??0)*i.factor,t=a.min,n=a.max,l=a.decay??1;if(a.time||(a.time=0),(a.delayTime??0)>0&&a.time<(a.delayTime??0)&&(a.time+=i.value),!((a.delayTime??0)>0&&a.time<(a.delayTime??0))){switch(a.status){case"increasing":a.value>=n?(a.status="decreasing",a.loops||(a.loops=0),a.loops++):a.value+=o;break;case"decreasing":a.value<=t?(a.status="increasing",a.loops||(a.loops=0),a.loops++):a.value-=o}a.velocity&&1!==l&&(a.velocity*=l),function(e,s,i,a){switch(e.options.size.animation.destroy){case"max":s>=a&&e.destroy();break;case"min":s<=i&&e.destroy()}}(s,a.value,t,n),s.destroyed||(a.value=e(a.value,t,n))}}(s,i)}}async function a(e,s=!0){await e.addParticleUpdater("size",(()=>new i),s)}export{a as l};
