import{A as e,M as n,I as o,B as a}from"./tsparticles-engine-1e3d91c8.js";class s{constructor(){this.angle=50,this.move=10}load(n){n&&(void 0!==n.angle&&(this.angle=e(n.angle)),void 0!==n.move&&(this.move=e(n.move)))}}class t{constructor(){this.distance=5,this.enable=!1,this.speed=new s}load(o){if(o&&(void 0!==o.distance&&(this.distance=e(o.distance)),void 0!==o.enable&&(this.enable=o.enable),void 0!==o.speed))if(n(o.speed))this.speed.load({angle:o.speed});else{const e=o.speed;void 0!==e.min?this.speed.load({angle:e}):this.speed.load(o.speed)}}}class l{constructor(e){this.container=e}init(e){const n=e.options.wobble;(null==n?void 0:n.enable)?e.wobble={angle:o()*Math.PI*2,angleSpeed:a(n.speed.angle)/360,moveSpeed:a(n.speed.move)/10}:e.wobble={angle:0,angleSpeed:0,moveSpeed:0},e.retina.wobbleDistance=a((null==n?void 0:n.distance)??0)*this.container.retina.pixelRatio}isEnabled(e){var n;return!e.destroyed&&!e.spawning&&!!(null==(n=e.options.wobble)?void 0:n.enable)}loadOptions(e,...n){e.wobble||(e.wobble=new t);for(const o of n)e.wobble.load(null==o?void 0:o.wobble)}update(e,n){this.isEnabled(e)&&function(e,n){const{wobble:o}=e.options,{wobble:a}=e;if(!(null==o?void 0:o.enable)||!a)return;const s=a.angleSpeed*n.factor,t=a.moveSpeed*n.factor*((e.retina.wobbleDistance??0)*n.factor)/(1e3/60),l=2*Math.PI,{position:i}=e;a.angle+=s,a.angle>l&&(a.angle-=l),i.x+=t*Math.cos(a.angle),i.y+=t*Math.abs(Math.sin(a.angle))}(e,n)}}async function i(e,n=!0){await e.addParticleUpdater("wobble",(e=>new l(e)),n)}export{i as l};
